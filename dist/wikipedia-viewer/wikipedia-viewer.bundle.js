!function(n){function e(e){for(var o,a,c=e[0],u=e[1],l=e[2],s=0,d=[];s<c.length;s++)a=c[s],r[a]&&d.push(r[a][0]),r[a]=0;for(o in u)Object.prototype.hasOwnProperty.call(u,o)&&(n[o]=u[o]);for(p&&p(e);d.length;)d.shift()();return i.push.apply(i,l||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],o=!0,c=1;c<t.length;c++){var u=t[c];0!==r[u]&&(o=!1)}o&&(i.splice(e--,1),n=a(a.s=t[0]))}return n}var o={},r={1:0},i=[];function a(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=n,a.c=o,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)a.d(t,o,function(e){return n[e]}.bind(null,o));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="";var c=window.webpackJsonp=window.webpackJsonp||[],u=c.push.bind(c);c.push=e,c=c.slice();for(var l=0;l<c.length;l++)e(c[l]);var p=u;i.push([5,0]),t()}({21:function(n,e,t){var o=t(22);"string"==typeof o&&(o=[[n.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(1)(o,r);o.locals&&(n.exports=o.locals)},22:function(n,e,t){(n.exports=t(0)(!1)).push([n.i,"body {\n  background-color: #004b69; }\n\n.random-div {\n  margin-top: 300px;\n  text-align: center;\n  font-size: 18px;\n  color: #fff; }\n  .random-div a {\n    text-decoration: none;\n    color: #fff; }\n\n.search-div {\n  margin-top: 30px;\n  text-align: center; }\n  .search-div .search-top {\n    display: flex;\n    height: 100px;\n    justify-content: center;\n    align-items: center; }\n  .search-div .icon {\n    text-align: center; }\n  .search-div ul {\n    list-style: none;\n    display: none; }\n  .search-div ul li {\n    display: inline-block;\n    width: 90%;\n    margin: 20px auto;\n    background-color: white;\n    border-radius: 5px;\n    padding: 5px; }\n  .search-div ul li:hover {\n    box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.4); }\n  .search-div a {\n    text-decoration: none;\n    color: #000; }\n  .search-div a:hover {\n    text-decoration: none;\n    color: #000; }\n\n.input-box {\n  display: none;\n  position: relative;\n  height: 40px;\n  width: 0px;\n  border: 2px solid #b68228;\n  border-radius: 30px;\n  padding: 2px 36px 2px 15px;\n  background-color: #004b69;\n  margin-left: auto;\n  margin-right: auto; }\n  .input-box input {\n    display: block;\n    width: 100%;\n    height: 32px;\n    padding: 0;\n    outline: none;\n    border: 0;\n    background: 0;\n    color: #fff;\n    font-size: 16px;\n    line-height: 36px; }\n  .input-box button {\n    position: absolute;\n    right: 6px;\n    top: 0;\n    width: 30px;\n    color: #b68228;\n    background: 0;\n    font-size: 24px;\n    border: 0;\n    outline: 0; }\n\n#searchIcon {\n  background-color: #004b69;\n  color: #b68228;\n  font-size: 40px; }\n",""])},5:function(n,e,t){"use strict";(function(n){t(6),t(13),t(21),t(23),t(24),t(25),angular.module("myApp",["ngSanitize"]).controller("myCtrl",function(e){n("#searchIcon").on("click",function(){n("#searchIcon").hide(),n("#searchInput").show(),n("#searchInput").animate({width:"300px"},"slow",function(){n("#inputText").focus()}),n("#searchResult").show()}),n("#btnClear").on("click",function(){n("#inputText").val(""),n("#inputText").focus()}),n("#inputText").on("keydown",function(t){13===t.keyCode&&function(){var t=n("#inputText").val(),o="https://en.wikipedia.org/w/api.php?action=query&list=search&srsearch="+t+"&utf8=1&format=json";n.ajax({url:o,type:"GET",dataType:"jsonp",success:function(n){e.hasResult=n.query.search.length>0,e.list=n.query.search,e.$apply(),console.log("success")}})}()})})}).call(this,t(2))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,